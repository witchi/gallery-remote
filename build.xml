<project name="GalleryRemote" default="compile" basedir=".">
	<description>
		A part of the Gallery project
	</description>

	<!-- set global properties for this build -->
	<property file="build.properties" />

	<property name="dir.src" location="src" />
	<property name="dir.build" location="build" />
	<property name="dir.lib" location="lib" />
	<property name="dir.img" location="src/img" />
	<property name="dir.dest" location="dest" />
	<property name="file.keystore" location="${dir.build}/gallery_keystore" />

	<path id="path.classpath">
		<fileset dir="${dir.lib}" includes="**/*.jar" />
		<pathelement path="${dir.img}" />
	</path>

	<target name="prepare">
		<!-- Create the time stamp -->
		<tstamp />
		<available property="keystore.present" file="${file.keystore}" />

		<mkdir dir="${dir.build}" />
		<mkdir dir="${dir.dest}" />

		<copy todir="${dir.build}">
			<fileset dir="${dir.src}" includes="**/resources/**" />
			<fileset dir="${dir.src}" includes="**/*.xml" />
			<fileset dir="${dir.src}" includes="**/*.png" />
			<fileset dir="${dir.src}" includes="**/*.gif" />
			<fileset dir="${dir.src}" includes="**/*.properties" />
		</copy>
	</target>

	<target name="compile" depends="prepare" description="compile the source">
		<!-- Compile the java code from ${dir.src} into ${dir.build} -->
		<javac includeantruntime="false" srcdir="${dir.src}" destdir="${dir.build}" classpathref="path.classpath" includes="com/**,ch/**,edu/**" listfiles="on" debug="on" nowarn="off" source="1.7" target="1.7">
			<compilerarg value="-XDignore.symbol.file" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>
	</target>

	<target name="run" depends="compile" description="compile then run">
		<java classname="com.gallery.GalleryRemote.GalleryRemote" fork="true" maxmemory="256M">
			<classpath>
				<pathelement location="${dir.build}" />
				<path refid="path.classpath" />
			</classpath>
		</java>
	</target>

	<target name="debug" depends="compile" description="compile then run">

		<java classname="com.gallery.GalleryRemote.GalleryRemote" fork="true" maxmemory="256M">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" />
			<classpath>
				<pathelement path="${dir.build}" />
				<path refid="path.classpath" />
			</classpath>
		</java>
	</target>

	<target name="clean" description="clean work files">
		<!-- Delete the ${dir.build} and ${dist} directory trees -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dist}" />
	</target>


	<target name="galleryremote_jar" depends="clean,compile">
		<delete file="${dir.dest}/GalleryRemote.jar" />
		<jar destfile="${dir.dest}/GalleryRemote.jar">
			<fileset dir="${dir.build}" />
			<fileset dir="." includes="*.properties,ApertureToGallery.applescript" excludes="postchangelog.properties" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="com.gallery.GalleryRemote.GalleryRemote" />
				<attribute name="Class-Path" value="${dir.lib}/metadata-extractor-2.1.jar ${dir.img}/" />
			</manifest>
		</jar>

		<signjar jar="${dir.dest}/GalleryRemote.jar" alias="gallery" storepass="gallery" />
	</target>

	<target name="galleryremoteapplet_jar" depends="clean,compile">
		<delete file="${dir.dest}/GalleryRemoteApplet.jar" />
		<jar destfile="${dir.dest}/GalleryRemoteApplet.jar" index="true">
			<fileset dir="${dir.build}" includesfile="AppletMiniExcludes.txt" excludesfile="AppletExcludes.txt" />
			<fileset dir="." includes="*.properties" excludes="postchangelog.properties" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>

		<!-- For testing you can self sign the jar. To create a key:-->
		<!-- $keytool -genkey -alias gallery -keypass gallery-->
		<signjar jar="${dir.dest}/GalleryRemoteApplet.jar" alias="gallery" storepass="gallery" />
	</target>

	<target name="galleryremoteappletmini_jar" depends="clean,compile">
		<delete file="${dir.dest}/GalleryRemoteAppletMini.jar" />
		<jar destfile="${dir.dest}/GalleryRemoteAppletMini.jar" index="true">
			<fileset dir="${dir.build}" excludes="ch/*">
				<excludesfile name="AppletMiniExcludes.txt" />
				<excludesfile name="AppletExcludes.txt" />
			</fileset>
			<fileset dir="." includes="*.properties" excludes="postchangelog.properties" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>

		<signjar jar="${dir.dest}/GalleryRemoteAppletMini.jar" alias="gallery" storepass="gallery" />
	</target>

	<target name="galleryremotehttpclient_jar" depends="clean,compile">
		<delete file="${dir.dest}/GalleryRemoteHTTPClient.jar" />
		<jar destfile="${dir.dest}/GalleryRemoteHTTPClient.jar" index="true">
			<fileset dir="${dir.build}" includes="ch/*" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>

		<signjar jar="${dir.dest}/GalleryRemoteHTTPClient.jar" alias="gallery" storepass="gallery" />
	</target>

	<target name="img_jar" depends="clean,compile">
		<jar destfile="${dir.dest}/img.jar">
			<fileset dir="${img}" />
			<fileset dir="." includes="rar_about_gr1.png" />
		</jar>

		<signjar jar="${dir.dest}/img.jar" alias="gallery" storepass="gallery" />
	</target>

	<target name="appletimg_jar" depends="clean,compile">
		<copy file="imagemagick/im.properties.applet" tofile="${img}/im.properties" />
		<copy file="jpegtran/jpegtran.properties.applet" tofile="${img}/jpegtran.properties" />

		<jar destfile="${dir.dest}/applet_img.jar">
			<fileset dir="${img}" />
		</jar>

		<delete file="${img}/im.properties" />
		<delete file="${img}/jpegtran.properties" />
	</target>

	<target name="jar" depends="galleryremote_jar,galleryremoteapplet_jar,galleryremoteappletmini_jar,galleryremotehttpclient_jar,img_jar,appletimg_jar" description="create a jar of the source" />

	<target name="scrub" description="clean up all output files">
		<delete dir="${dir.build}" />
		<delete file="GalleryRemote.jar" />
		<delete file="GalleryRemoteAppletMini.jar" />
		<delete file="GalleryRemote.MacOSX.NoVM.tgz" />
		<delete file="GalleryRemoteHTTPClient.jar" />
		<delete file="img.jar" />
		<delete file="applet_img.jar" />
		<delete file="GalleryRemoteApplet.jar" />
		<delete file="gallery_remote_applets.zip" />
		<delete file="gallery_remote.zip" />
		<delete dir="Gallery Remote.app" />
	</target>

	<!-- Creates the keystore for jar signing. Will be generated once. -->
	<target name="create_keystore" description="Creates a self-signed certificate">
		<exec executable="keytool">
			<arg line="-genkey -keyalg RSA -alias gallery -dname &quot;CN=gallery.sourceforge.net, OU=Gallery, O=Gallery, L=Menlo Park, ST=California, C=US&quot; -keypass gallery -storepass gallery" />
		</exec>
	</target>

	<target name="make_csr" description="Create a Certificate Signing Request from a self-signed certificate">
		<exec executable="keytool">
			<arg line="-certreq -alias gallery -keyalg RSA -keypass gallery -storepass gallery -file gallery.csr" />
		</exec>
	</target>

	<target name="slideshowtest" depends="compile">
		<java classname="com.gallery.GalleryRemote.DummyAppletContext" fork="true">
			<classpath>
				<pathelement path="${dir.build}" />
				<path refid="path.classpath" />
			</classpath>
			<arg line="com.gallery.GalleryRemote.GRAppletSlideshow -width 300 -height 450 gr_url http://www.paour.com/gallery2/ gr_gallery_version 2 gr_album 100401" />
		</java>
	</target>

</project>
